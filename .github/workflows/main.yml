name: Fancy Compendia Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      # Node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          npm i --force

      # Builds Module
      - name: Build Module
        run: npm run build

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      # Substitute the Manifest and Download URLs in the system.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'module.json'
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/fancy-compendia.zip

      # Create a zip file with all files required by the system to add to the release
      - name: Zip Files
        run: zip -r ./fancy-compendia.zip module.json LICENCE.md index.js style.css lang/ assets/ README.md

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './module.json, ./fancy-compendia.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
